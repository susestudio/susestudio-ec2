------------------------------------------------
README for SUSE Studio Amazon EC2 appliance
------------------------------------------------

This tarball contains the Amazon EC2 appliance created by SUSE Studio and the
create_ami.sh script. The script bundles and uploads the appliance to Amazon
S3. It also registers it with Amazon EC2 as an AMI (Amazon Machine Image).

The Amazon EC2 AMI and API tools must be installed for the script to work. These
can be found at:

  http://developer.amazonwebservices.com/connect/entry.jspa?externalID=368
  http://developer.amazonwebservices.com/connect/entry.jspa?externalID=351

Additional help on setting up these tools can be found here:
http://docs.amazonwebservices.com/AmazonEC2/gsg/2006-06-26/setting-up-your-tools.html

In order to access Amazon Web Services (AWS), the script requires the following
environment variables to be defined:

  $AWS_USER_ID     - AWS user ID (eg. 123456789012)
  $AWS_ACCESS_KEY  - AWS access key ID (eg. ABCDEFGHIJKLMNOPQRST)
  $AWS_SECRET_KEY  - AWS secret access key (eg. abcdefghijklmnoprqrtuvwxyzabcdv)
  $EC2_CERT        - Path to EC2 X.509 certification (eg. ~/cert-aws.pem)
  $EC2_PRIVATE_KEY - Path to EC2 private key (eg. ~/pk-ec2.pem)

We recommend setting these variables in your ~/.profile file so that you don't have to
set them up manually each time, eg: 
export AWS_USER_ID=123456789012
export AWS_ACCESS_KEY=ABCDEFGHIJKLMNOPQRST 
export AWS_SECRET_KEY=abcdefghijklmnoprqrtuvwxyzabcdv 
export EC2_CERT=~/cert-aws.pem 
export EC2_PRIVATE_KEY=~/pk-ec2.pem 

Now create your AMI with the specific Amazon region (us-west-1, us-east-1, eu-west-1, 
ap-southeast-1...), eg:
./create_ami.sh --region eu-west-1

One way to launch new instances of your AMI is with the command line tools, eg:
ec2-run-instances ami-6a380d1e -t m1.small --region eu-west-1 -k bbrunner-eu
You'll want to create your SSH keypair in Amazon first if you don't already have
one (specified by the -k option) as password based authentication is
automatically disabled.
Wait for the instance to boot and check for it's DNS name with ec2-describe-instances, 
and then you can ssh into it once it fully boots up, eg: 
ssh -i ~/ec2-eu root@ec2-46-51-133-248.eu-west-1.compute.amazonaws.com
Don't forget to terminate the instance when you're done, eg: 
ec2-terminate-instances

Other way to manage your Amazon EC2 and S3 accounts, is using ElasticFox and S3Fox
Firefox plugins.

Send your bug reports, questions, feedback, and suggestions to
feedback@susestudio.com.

-----------------
Example
-----------------

Normal execution of the create_ami.sh script looks like this:

  jamestyj@sg:/My_EC2.x86_64.0.0.1> ./create_ami.sh 
  Bundling image file...
  Splitting ec2-tmp/My_EC2.x86_64-0.0.1.tar.gz.enc...
  Created My_EC2.x86_64-0.0.1.part.0
  Created My_EC2.x86_64-0.0.1.part.1
  Created My_EC2.x86_64-0.0.1.part.2
  Created My_EC2.x86_64-0.0.1.part.3
  Created My_EC2.x86_64-0.0.1.part.4
  Created My_EC2.x86_64-0.0.1.part.5
  Created My_EC2.x86_64-0.0.1.part.6
  Created My_EC2.x86_64-0.0.1.part.7
  Generating digests for each part...
  Digests generated.
  Creating bundle manifest...
  ec2-bundle-image complete.
  Creating bucket...
  Uploading bundled image parts to the S3 bucket susestudio-dbbc81367aa...
  Uploaded My_EC2.x86_64-0.0.1.part.0
  Uploaded My_EC2.x86_64-0.0.1.part.1
  Uploaded My_EC2.x86_64-0.0.1.part.2
  Uploaded My_EC2.x86_64-0.0.1.part.3
  Uploaded My_EC2.x86_64-0.0.1.part.4
  Uploaded My_EC2.x86_64-0.0.1.part.5
  Uploaded My_EC2.x86_64-0.0.1.part.6
  Uploaded My_EC2.x86_64-0.0.1.part.7
  Uploading manifest ...
  Uploaded manifest.
  Bundle upload completed.
  Registering AMI...
  Done! Use the following command to launch your newly created AMI:
   ec2run ami-f1ef7898 -K ~/pk-aws.pem -C ~/cert-aws.pem -t m1.large

